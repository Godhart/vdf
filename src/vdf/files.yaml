__fallback__:
  render: RenderJinja2
  ext: .generic
  sections: [content]
  template : |-
    {{ render_section('content') }}

text:
  render: RenderJinja2
  ext: .txt
  sections: [content]
  template : |-
    {{ render_section('content') }}

markdown:
  render: RenderJinja2
  ext: .md
  sections: [frontmatter, content]
  template : |-
    {% if hasattr(file_vars, 'frontmatter') %}---
    {{ yaml(file_vars.frontmatter) }}

    ---
    {% endif %}
    {% if 'content' in sections %}{{ render_section('content') }}{% endif %}

vhdl:
  render: RenderJinja2
  ext: .vhd
  sections:
    - header__declaration
    - header__body
    - unit__generics
    - unit__interface
    - code__declaration
    - code__body
  template : |
    {% if 'header__declaration' in sections -%}
    {{ render_section('header__declaration') }}
    {% endif %}
    entity {{ file_vars.subject }} is
    {%- if 'unit__generics' in sections %}
        generic (
    {{ render_section('unit__generics', '        ') }}
        );
    {%- endif %}
    {%- if 'unit__interface' in sections %}
        port (
    {{ render_section('unit__interface', '        ') }}
        );
    {%- endif %}
    end entity;


    {% if 'header__body' in sections -%}
    {{ render_section('header__body') }}
    {% endif -%}
    architecture rtl of {{ file_vars.subject }} is
    {%- if 'code__declaration' in sections %}
    {{ render_section('code__declaration', '    ') }}
    {%- endif %}
    begin
    {%- if 'code__body' in sections %}
    {{ render_section('code__body', '    ') }}
    {%- endif %}
    end architecture;

vhdl-package:
  render: RenderJinja2
  ext: .vhd
  sections:
    - header__declaration
    - header__body
    - code__declaration
    - code__body
  template : "TODO: vhdl package template"

verilog:
  render: RenderJinja2
  ext: .v
  sections:
    - header__declaration
    - unit__generics
    - unit__interface
    - code__declaration
    - code__body
  template : "TODO: verilog template"

verilog-header:
  render: RenderJinja2
  ext: .vh
  sections:
    - header__declaration
    - header__body
  template : "TODO: verilog header template"

sv:
  render: RenderJinja2
  ext: .sv
  sections:
    - header__declaration
    - unit__generics
    - unit__interface
    - code__declaration
    - code__body
  template : "TODO: sv template"

sv-header:
  render: RenderJinja2
  ext: .svh
  sections:
    - header__declaration
    - code__body
  template : "TODO: sv header template"
